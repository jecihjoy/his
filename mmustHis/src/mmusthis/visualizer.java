package mmusthis;

import static com.sun.org.apache.xalan.internal.lib.ExsltDatetime.year;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author geoffrey
 */
public class visualizer extends javax.swing.JPanel {

    /**
     * Creates new form visualizer
     */
    Connection conn = null;
    ResultSet rs = null;
    Statement st;
    PreparedStatement pst = null;

    public visualizer() {
        initComponents();
        conn = connection.dbConnect();
        drawPie();
        
    }

    private void drawPie() {
        panel1.removeAll();
        try {

            Statement statement = conn.createStatement();
            ResultSet resultSet = statement.executeQuery("select distinct disease, count(disease) as count from tbl_diagnosis group by disease");
            DefaultPieDataset dataset = new DefaultPieDataset();
            ChartPanel p = null;

            while (resultSet.next()) {
                dataset.setValue(resultSet.getString("disease"), Double.parseDouble(resultSet.getString("count")));
                JFreeChart chart = ChartFactory.createPieChart("Diseases observed ", dataset, true, true, true);
                PiePlot plot = (PiePlot) chart.getPlot();
                p = new ChartPanel(chart);

                // p.setSize(400, 300);
            }
            panel1.add(p);
        } catch (Exception e) {
            e.printStackTrace();
        }

        panel1.revalidate();
        panel1.repaint();

    }

    private void drawBar() {
        String query = "select distinct dayofmonth(date) as dayofmonth,count(stuid) as numberofpatients from tbl_diagnosis group by dayofmonth order by dayofmonth asc ";
        panel1.removeAll();
        try {

            Statement statement = conn.createStatement();
            ResultSet resultSet = statement.executeQuery(query);
            DefaultCategoryDataset dataset = new DefaultCategoryDataset();
            ChartPanel p = null;

            while (resultSet.next()) {
                dataset.setValue(Double.parseDouble(resultSet.getString("numberofpatients")), " patients", resultSet.getString("dayofmonth"));
                JFreeChart chart = ChartFactory.createBarChart("patients attended per day", "month", "total", dataset, PlotOrientation.VERTICAL, true, true, true);
                CategoryPlot plot = chart.getCategoryPlot();
                p = new ChartPanel(chart);
               // p.setSize(400, 300);

            }
            panel1.add(p);
        } catch (Exception e) {
            e.printStackTrace();
        }

        panel1.revalidate();
        panel1.repaint();

    }

    private void drugsDispensedPerDay() {
        panel1.removeAll();
        try {
            String query="select distinct dayofmonth(date) as date,Drug_Name as drugname,count(Drug_Name)  as count from tbl_prescriptions group by Drug_Name order by date asc";

            Statement statement = conn.createStatement();
            ResultSet resultSet = statement.executeQuery(query);
            //ResultSet resultSet = statement.executeQuery("select drugname,count(drugname) as count, CONCAT(DAY(datedispensed),' ' ,MONTHNAME(datedispensed)) as date from dispensing where YEAR(datedispensed)='"+year.getSelectedItem()+"' group by DATE(datedispensed) order by DATE(datedispensed) desc limit 10");
            DefaultCategoryDataset dataset = new DefaultCategoryDataset();
            ChartPanel p = null;

            while (resultSet.next()) {
                dataset.setValue(Double.parseDouble(resultSet.getString("count")), resultSet.getString("drugname"), resultSet.getString("date"));
                JFreeChart chart = ChartFactory.createBarChart("daily drugs dispense ", "drugname", "total drugs", dataset, PlotOrientation.VERTICAL, true, true, false);
                CategoryPlot plot = chart.getCategoryPlot();
                p = new ChartPanel(chart);

               // p.setSize(300, 300);
            }
            panel1.add(p);
        } catch (Exception e) {
            e.printStackTrace();
        }
        panel1.revalidate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(153, 204, 255));
        setPreferredSize(new java.awt.Dimension(1050, 598));

        panel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        panel1.setPreferredSize(new java.awt.Dimension(1000, 510));

        jButton1.setText("patients attended per day");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("disease trends ");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 255));
        jLabel1.setText("OVERALL VISUALIZER");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addGap(292, 292, 292))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 449, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, 781, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(259, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, 481, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(18, 18, 18))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        drawPie();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        drawBar();
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel panel1;
    // End of variables declaration//GEN-END:variables
}
